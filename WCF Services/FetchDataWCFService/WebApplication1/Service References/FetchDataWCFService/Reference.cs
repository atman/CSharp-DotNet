//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.FetchDataWCFService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeData", Namespace="http://schemas.datacontract.org/2004/07/FetchDataWCFService")]
    [System.SerializableAttribute()]
    public partial class EmployeeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.FetchDataWCFService.Employee[] EmpDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.FetchDataWCFService.Employee[] EmpData {
            get {
                return this.EmpDataField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpDataField, value) != true)) {
                    this.EmpDataField = value;
                    this.RaisePropertyChanged("EmpData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/FetchDataWCFService")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeptNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmpIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeptNo {
            get {
                return this.DeptNoField;
            }
            set {
                if ((this.DeptNoField.Equals(value) != true)) {
                    this.DeptNoField = value;
                    this.RaisePropertyChanged("DeptNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmpId {
            get {
                return this.EmpIdField;
            }
            set {
                if ((this.EmpIdField.Equals(value) != true)) {
                    this.EmpIdField = value;
                    this.RaisePropertyChanged("EmpId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/FetchDataWCFService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FetchDataWCFService.IDataOperationsService")]
    public interface IDataOperationsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataOperationsService/GetData", ReplyAction="http://tempuri.org/IDataOperationsService/GetDataResponse")]
        WebApplication1.FetchDataWCFService.EmployeeData GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataOperationsService/GetData", ReplyAction="http://tempuri.org/IDataOperationsService/GetDataResponse")]
        System.Threading.Tasks.Task<WebApplication1.FetchDataWCFService.EmployeeData> GetDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataOperationsService/updateInfo", ReplyAction="http://tempuri.org/IDataOperationsService/updateInfoResponse")]
        bool updateInfo(WebApplication1.FetchDataWCFService.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataOperationsService/updateInfo", ReplyAction="http://tempuri.org/IDataOperationsService/updateInfoResponse")]
        System.Threading.Tasks.Task<bool> updateInfoAsync(WebApplication1.FetchDataWCFService.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataOperationsService/deleteRow", ReplyAction="http://tempuri.org/IDataOperationsService/deleteRowResponse")]
        bool deleteRow(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataOperationsService/deleteRow", ReplyAction="http://tempuri.org/IDataOperationsService/deleteRowResponse")]
        System.Threading.Tasks.Task<bool> deleteRowAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataOperationsService/insertRow", ReplyAction="http://tempuri.org/IDataOperationsService/insertRowResponse")]
        bool insertRow(WebApplication1.FetchDataWCFService.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataOperationsService/insertRow", ReplyAction="http://tempuri.org/IDataOperationsService/insertRowResponse")]
        System.Threading.Tasks.Task<bool> insertRowAsync(WebApplication1.FetchDataWCFService.Employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataOperationsService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IDataOperationsService/GetDataUsingDataContractResponse")]
        WebApplication1.FetchDataWCFService.CompositeType GetDataUsingDataContract(WebApplication1.FetchDataWCFService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataOperationsService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IDataOperationsService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WebApplication1.FetchDataWCFService.CompositeType> GetDataUsingDataContractAsync(WebApplication1.FetchDataWCFService.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataOperationsServiceChannel : WebApplication1.FetchDataWCFService.IDataOperationsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataOperationsServiceClient : System.ServiceModel.ClientBase<WebApplication1.FetchDataWCFService.IDataOperationsService>, WebApplication1.FetchDataWCFService.IDataOperationsService {
        
        public DataOperationsServiceClient() {
        }
        
        public DataOperationsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataOperationsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataOperationsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataOperationsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication1.FetchDataWCFService.EmployeeData GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.FetchDataWCFService.EmployeeData> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
        
        public bool updateInfo(WebApplication1.FetchDataWCFService.Employee emp) {
            return base.Channel.updateInfo(emp);
        }
        
        public System.Threading.Tasks.Task<bool> updateInfoAsync(WebApplication1.FetchDataWCFService.Employee emp) {
            return base.Channel.updateInfoAsync(emp);
        }
        
        public bool deleteRow(int id) {
            return base.Channel.deleteRow(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteRowAsync(int id) {
            return base.Channel.deleteRowAsync(id);
        }
        
        public bool insertRow(WebApplication1.FetchDataWCFService.Employee emp) {
            return base.Channel.insertRow(emp);
        }
        
        public System.Threading.Tasks.Task<bool> insertRowAsync(WebApplication1.FetchDataWCFService.Employee emp) {
            return base.Channel.insertRowAsync(emp);
        }
        
        public WebApplication1.FetchDataWCFService.CompositeType GetDataUsingDataContract(WebApplication1.FetchDataWCFService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.FetchDataWCFService.CompositeType> GetDataUsingDataContractAsync(WebApplication1.FetchDataWCFService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
